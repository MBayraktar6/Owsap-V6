crack_dawnmist_dungeon={["start"]=0,in_dungeon= function (idx)return idx >= 367 * 10000 and idx < ( 367 + 1 ) * 10000 
end ,create= function (idx)party . setf ( "dungeon_index" , idx ) 
d . setf ( "created" , 1 ) 
d . setf ( "started" , 0 ) 
d . setf ( "finished" , 0 ) 
d . setf ( "party_leader_pid" , party . get_leader_pid ( ) ) 
d . set_regen_file ( "data/dungeon/crack_dawnmist_dungeon/" .. "npc.txt" ) 
d . set_regen_file ( "data/dungeon/crack_dawnmist_dungeon/" .. "regen.txt" ) 
d . set_regen_file ( "data/dungeon/crack_dawnmist_dungeon/" .. "boss.txt" ) 
d . set_regen_file ( "data/dungeon/crack_dawnmist_dungeon/" .. "stone.txt" ) 
d . set_item_group ( "dryad_stone" , 1 , 31161 , 1 ) 
d . notice ( c_locale ( 11507 , 60 ) ) 
d . notice ( c_locale ( 11511 ) ) 
server_timer ( "crack_dawnmist_dungeon_45m_left_timer" , 60 * 15 , d . get_map_index ( ) ) 
end ,warp_out= function ()pc . warp ( 3197 * 100 , 18045 * 100 , 363 ) 
end ,go_boss= function ()crack_dawnmist_dungeon . clear ( true ) 
d . delete_item_in_item_group_from_all ( "dryad_stone" ) 
d . setf ( "started" , 1 ) 
d . jump_all ( 3427 , 19117 ) 
d . spawn_mob ( 4272 , 69 , 941 ) 
end ,clear_server_timers= function (idx)clear_server_timer ( "crack_dawnmist_dungeon_45m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_30m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_15m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_5m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_1m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_0m_left_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_end_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_quit_timer" , idx ) 
clear_server_timer ( "crack_dawnmist_dungeon_spawn_timer" , idx ) 
end ,clear= function (purge)d . clear_regen ( ) 
if purge then 
d . purge ( ) 
else 
d . kill_all ( ) 
end 
end ,clear_and_exit= function ()crack_dawnmist_dungeon . clear ( true ) 
d . set_warp_location ( 363 , 3197 , 18045 ) 
d . exit_all ( ) 
end }