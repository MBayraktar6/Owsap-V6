quest event_easter_2013 begin
	state start begin
		-- 2013 --
		function spawn_metin(map_index)
			local settings = event_easter_2013.get_settings()
			local level_table = settings.spawn.maps[map_index]
			if level_table == nil then
				return
			end
			table.foreach(level_table,
				function(index, level)
					for i = 0, 5 do
						regen_in_map(map_index, "data/map/easter/metin_regen_level" .. level .. ".txt")
					end
				end
			)
			mob.spawn(20352, 1, 1, 1, 1, 1)
		end

		function metin_killed(vnum)
			local settings = event_easter_2013.get_settings()
			local level = settings.metins[vnum]

			regen_in_map(pc.get_map_index(), "data/map/easter/metin_regen_level" .. level .. ".txt")
			if level < pc.get_level() - settings.max_level_difference then
				return
			else
				local eggVnum = math.random(settings.eggvnums.first, settings.eggvnums.last)
				game.drop_item_with_ownership(eggVnum, 1)
				if math.random(1, 100) <= settings.magicegg.pct then
					game.drop_item_with_ownership(settings.magicegg.vnum, 1)
				end
			end
		end

		-- 2012 --
		function is_running()
			return (game.get_event_flag("easter_drop") > 0)
		end

		function has_rabbit()
			return (game.get_event_flag("easter_rabbit") > 0)
		end

		function get_settings()
			local spawnPromille = game.get_event_flag("easter_spawn_chance")
			if spawnPromille <= 0 then
				spawnPromille = 5
			end

			local magicEggPercent = game.get_event_flag("easter_magicegg_chance")
			if magicEggPercent <= 0 then
				magicEggPercent = 5
			end

			return {
				["eggvnums"] = {
					["first"] = 50160, -- Easter Egg
					["last"] = 50179, -- Easter Egg
				},
				["baskets"] = {
					["full"] = 50181, -- Basket with Easter Eggs
					["empty"] = 50180, -- Empty Basket
				},
				["magicegg"] = {
					["vnum"] = 71150, -- Magic Egg
					["pct"] = magicEggPercent,
				},
				["metins"] = {
					[8041] = 10,
					[8042] = 20,
					[8043] = 30,
					[8044] = 40,
					[8045] = 50,
					[8046] = 60,
					[8047] = 70,
					[8048] = 80,
					[8049] = 90,
					[8050] = 95,
					[8204] = 100,
					[8205] = 105,
					[8206] = 120
				},
				["max_level_difference"] = 15,
				["rabbit"] = 30129, -- Easter Bunny
				["spawn"] = {
					["kill"] = 100,
					["cooldown"] = 60,
					["promille"] = spawnPromille,
					["maps"] = {
						[1] = { 10, 20 }, -- metin2_map_a1
						[3] = { 20, 30 }, -- metin2_map_a3
						[21] = { 10, 20 }, -- metin2_map_b1
						[23] = { 20, 30 }, -- metin2_map_b3
						[41] = { 10, 20 }, -- metin2_map_c1
						[43] = { 20, 30 }, -- metin2_map_c3
						[61] = { 50, 70 }, -- map_n_snowm_01
						[62] = { 50, 70 }, -- metin2_map_n_flame_01
						[63] = { 40, 50 }, -- metin2_map_n_desert_01
						[64] = { 30, 60 }, -- map_n_threeway
						[65] = { 40, 50 }, -- metin2_map_milgyo
						[67] = { 60, 80 }, -- metin2_map_trent
						[68] = { 70, 80 }, -- metin2_map_trent02
						[69] = { 60, 70 }, -- metin2_map_wl_01
						[70] = { 70, 80 }, -- metin2_map_nusluck01
						[301] = { 90, 95 }, -- metin2_map_capedragonhead
						[302] = { 90, 95 }, -- metin2_map_dawnmistwood
						[303] = { 90, 95 }, -- metin2_map_bayblacksand
						[304] = { 90, 95 }, -- metin2_map_mt_thunder
						[353] = { 105, 120 }, -- metin2_map_dawnmist_dungeon_01
						[354] = { 100, 105 }, -- metin2_map_mt_th_dungeon_01
					},
				},
			}
		end

		function get_reward_table_for_item()
			-- for each level range there is a different reward
			local playerlevel = pc.get_level()
			if playerlevel <= 18 then
				return {
					{ 27002, 13 }, -- Red Potion (M)
					{ 27005, 13 }, -- Blue Potion (M)
					{ 27100, 8 }, -- Green Potion (S)
					{ 27103, 8 }, -- Purple Potion (S)
					{ 50721, 4 }, -- Peach Blossom
					{ 30053, 9, 20 }, -- Bear Foot Skin
					{ 30073, 9, 20 }, -- White Hairband+
					{ 30033, 9, 20 }, -- Broken Porcelain
					{ 30010, 9, 20 }, -- Bear Gall
					{ 30031, 9, 20 }, -- Ornament
					{ 30032, 9, 20 } -- Black Uniform
				}
			elseif playerlevel > 18 and playerlevel <= 30 then
				return {
					{ 27002, 18 }, -- Red Potion (M)
					{ 27005, 18 }, -- Blue Potion (M)
					{ 27100, 7 }, -- Green Potion (S)
					{ 27103, 7 }, -- Purple Potion (S)
					{ 27101, 3 }, -- Green Potion (M)
					{ 27104, 3 }, -- Purple Potion (M)
					{ 50721, 8 }, -- Gango Root
					{ 50722, 8 }, -- Kaki Blossom
					{ 50723, 8 }, -- Bellflower
					{ 50724, 8 }, -- Peach Blossom
					{ 50300, 2, 20 }, -- Skill Book
					{ 30196, 5, 20 }, -- Demon's Ashes
					{ 30090, 5, 20 } -- Ice Marble+
				}
			elseif playerlevel > 30 and playerlevel <= 52 then
				return {
					{ 27101, 8 }, -- Green Potion (M)
					{ 27104, 8 }, -- Purple Potion (M)
					{ 27003, 17 }, -- Red Potion (L)
					{ 27006, 17 }, -- Blue Potion (L)
					{ 27102, 3 }, -- Green Potion (L)
					{ 27105, 3 }, -- Purple Potion (L)
					{ 50721, 5 }, -- Peach Blossom
					{ 50722, 5 }, -- Bellflower
					{ 50723, 5 }, -- Kaki Blossom
					{ 50724, 5 }, -- Gango Root
					{ 50725, 5 }, -- Lilac
					{ 50726, 5 }, -- Tue Fungus
					{ 50727, 5 }, -- Alpine Rose
					{ 50728, 5 }, -- Mulberry
					{ 50300, 1, 20 }, -- Skill Book
					{ 30195, 4, 20 }, -- Quartz Sand
					{ 30197, 4, 20 }, -- Magic Seeds
					{ 30193, 3, 20 } -- Finger Bones
				}
			elseif playerlevel > 52 and playerlevel <= 74 then
				return {
					{ 27003, 14 }, -- Red Potion (L)
					{ 27006, 14 }, -- Blue Potion (L)
					{ 27102, 9 }, -- Green Potion (L)
					{ 27105, 9 }, -- Purple Potion (L)
					{ 50721, 5 }, -- Peach Blossom
					{ 50722, 5 }, -- Bellflower
					{ 50723, 5 }, -- Kaki Blossom
					{ 50724, 5 }, -- Gango Root
					{ 50725, 5 }, -- Lilac
					{ 50726, 5 }, -- Tue Fungus
					{ 50727, 5 }, -- Alpine Rose
					{ 50728, 5 }, -- Mulberry
					{ 50300, 1, 20 }, -- Skill Book
					{ 30198, 4, 20 }, -- Water Crystal
					{ 30199, 4, 20 }, -- Blue Crystal
				}
			else
				return {
					{ 27102, 11 }, -- Green Potion (L)
					{ 27105, 11 }, -- Purple Potion (L)
					{ 50091, 15 }, -- Goldfish Sushi
					{ 50092, 15 }, -- Carp Sushi
					{ 50093, 15 }, -- Salmon Sushi
					{ 50094, 15 }, -- Catfish Sushi
					{ 50300, 4, 20 }, -- Skill Book
					{ 50060, 6, 20 }, -- Horse Riding Manual
					{ 30196, 2, 20 }, -- Demon's Ashes
					{ 30090, 2, 20 }, -- Ice Marble+
					{ 30195, 2, 20 }, -- Quartz Sand
					{ 30197, 2, 20 }, -- Magic Seeds
					{ 30198, 2, 20 }, -- Water Crystal
					{ 30199, 2, 20 } -- Blue Crystal
				}
			end
		end

		function get_reward_amount_for_vnum(reward_table, vnum_to_search)
			local amount_needed = 1
			table.foreachi(reward_table,
				function(index, item)
					local itemVnum = item[1]
					if itemVnum == vnum_to_search then
						if table.getn(item) > 2 then
							amount_needed = item[3]
						else
							amount_needed = 1
						end
						return
					end
				end
			)
			return amount_needed
		end

		function get_number_of_eggs()
			local settings = event_easter_2013.get_settings()
			return count_item_range(settings.eggvnums.first, settings.eggvnums.last)
		end

		function get_random_reward_vnum(reward_table)
			local temp_table = {}
			local easterEggCount = event_easter_2013.get_number_of_eggs()
			table.foreachi(reward_table,
				function(index, item)
					local itemProbability = item[2]
					local itemVnum = item[1]
					local meetsAmountLimit = true
					-- check if we need more than one easter egg
					if table.getn(item) > 2 then
						if easterEggCount < item[3] then
							-- player does not have enough eggs for this item
							meetsAmountLimit = false
						end
					end
					if meetsAmountLimit then
						for amount = 1, itemProbability do
							table.insert(temp_table, itemVnum)
						end
					end
				end
			)
			return temp_table[math.random(table.getn(temp_table))]
		end

		-- 2013 --
		when login or enter with event_easter_2013.has_rabbit() begin
			-- spawn rabbit if he is not there
			local settings = event_easter_2013.get_settings()
			local mapIndex = pc.get_map_index()
			if mapIndex == 1 or mapIndex == 21 or mapIndex == 41 then
				if find_npc_by_vnum(settings.rabbit) == 0 then
					if mapIndex == 1 then
						mob.spawn(settings.rabbit, 591, 472, 1, 1, 1)
					elseif mapIndex == 21 then
						mob.spawn(settings.rabbit, 517, 742, 1, 1, 1)
					elseif mapIndex == 41 then
						mob.spawn(settings.rabbit, 306, 828, 1, 1, 1)
					end
				end
			end
			if find_npc_by_vnum(20352) == 0 then
				event_easter_2013.spawn_metin(pc.get_map_index())
			end
		end

		-- "What are you doing?"
		when 30129.chat.c_locale(5026) with event_easter_2013.get_number_of_eggs() == 0 begin
			say_title(c_locale(1041)) -- "Easter Bunny:"
			say(c_locale(1042)) -- "I have hidden Easter Eggs all over the place! Find them and bring them to me and I'll give you a reward."
			say(c_locale(1043)) -- "Unfortunately you haven't collected any Easter Eggs yet! Come back when you've got some Easter Eggs in your inventory."

			if not event_easter_2013.has_rabbit() then
				-- purge the rabbit if the event has finished
				npc.purge()
			end
		end -- when

		-- "What are you doing?"
		when 30129.chat.c_locale(5026) with event_easter_2013.get_number_of_eggs() > 0 begin
			local settings = event_easter_2013.get_settings()
			local reward_table = event_easter_2013.get_reward_table_for_item()
			local amount_to_remove = 0
			local amount_to_give = 0
			local vnum_to_give = 0
			local number_of_eggs = event_easter_2013.get_number_of_eggs()

			local wants_items = 2
			while wants_items == 2 do
				vnum_to_give = event_easter_2013.get_random_reward_vnum(reward_table)
				local amount_needed = event_easter_2013.get_reward_amount_for_vnum(reward_table, vnum_to_give)
				if amount_needed == 20 then
					amount_to_remove = 20
					amount_to_give = 1

					say_title(c_locale(1041)) -- "Easter Bunny:"
					say(c_locale(1047)) -- "Did you find some Easter Eggs?"
					say(c_locale(1045, amount_to_give)) -- "Very good! I’ll exchange your Easter Eggs for %d of these:"
					say(c_locale(1048, amount_to_remove)) -- "You have to give me %d eggs for that!"
					say_item_vnum(vnum_to_give)
				else
					if number_of_eggs > 20 then
						amount_to_remove = 20
					else
						amount_to_remove = number_of_eggs
					end

					if vnum_to_give < 27200 then
						amount_to_give = amount_to_remove * 3
					else
						amount_to_give = amount_to_remove * 5
					end

					say_title(c_locale(1041)) -- "Easter Bunny:"
					say(c_locale(1047)) -- "Did you find some Easter Eggs?"
					say(c_locale(1046, amount_to_remove)) -- "You have brought me the following amount of eggs: %d"
					say(c_locale(1045, amount_to_give)) -- "Very good! I’ll exchange your Easter Eggs for %d of these:"
					say_item_vnum(vnum_to_give)
				end
			end

			if (remove_item_range(amount_to_remove, settings.eggvnums.first, settings.eggvnums.last)) then
				pc.give_item2(vnum_to_give, amount_to_give)
			end

			wait()
			say_title(c_locale(1041)) -- "Easter Bunny:"
			say(c_locale(1051)) -- "Thanks for the eggs. Have fun with your Easter present!"

			if not event_easter_2013.has_rabbit() then
				-- purge the rabbit if the event has finished
				npc.purge()
			end
		end -- when

		when 8041.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8041)
		end
		when 8042.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8042)
		end
		when 8043.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8043)
		end
		when 8044.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8044)
		end
		when 8045.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8045)
		end
		when 8046.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8046)
		end
		when 8047.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8047)
		end
		when 8048.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8048)
		end
		when 8049.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8049)
		end
		when 8050.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8050)
		end
		when 8204.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8204)
		end
		when 8205.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8205)
		end
		when 8206.kill with event_easter_2013.is_running() begin
			event_easter_2013.metin_killed(8206)
		end
	end -- state
end -- quest
