-- Filename: daily_quest_mgr.quest
-- Author: Owsap
-- Description: Daily quest manager.

-- NOTE : All the settings of the quests are located @ setting.daily_quest (questlib.lua)

quest daily_quest_mgr begin
	state start begin
		when login or levelup with pc.get_level() >= special.daily_quest.level_limit begin
			set_state("run")
		end
	end

	state run begin
		function clear()
			pc.setqf("start_time", 0)
			pc.setqf("count", 0)
			pc.setqf("done", 0)

			cleartimer("daily_quest_over")

			-- Set all the daily quests into a clear state.
			for _, t in pairs(special.daily_quest.table) do
				for _, st in pairs(t) do
					set_quest_state(st["name"], "clear")
				end
			end

			q.done()
		end

		function update()
			if pc.getqf("done") != 1 then
				-- stop updating the counter if the daily quests are done.
				daily_quest_mgr.update_counter()
			end
			daily_quest_mgr.update_clock() -- Keep updating the clock.
		end

		function update_counter()
			local remain = pc.getqf("count")
			local remain_count = table_length(special.daily_quest.table) - remain

			q.set_counter_name(c_locale(11689)) -- Remaining Quests
			q.set_counter_value(remain_count)

			if remain_count <= 0 then
				-- All daily quests are completed.
				-- We want to stay in this state because the timer is still working.
				pc.setqf("done", 1) -- Set a quest flag for safety
				pc.give_item2(special.daily_quest.item_reward[1], special.daily_quest.item_reward[2]) -- Give last reward.
				q.done() -- Clear quest
			end
		end

		function update_clock()
			local left_time = special.daily_quest.limit_time - (get_time() - pc.getqf("start_time"))
			if left_time > 0 then
				q.set_clock(c_locale(11875), left_time) -- Time Remaining
				timer("daily_quest_over", left_time)
			else
				-- Daily quest time is over.
				daily_quest_mgr.clear()
				set_state("reset")
			end
		end

		when letter begin
			-- Only send the quest letter if any daily missions are available.
			if pc.getqf("done") != 1 then
				send_letter(c_locale(11688)) -- Complete all daily quests.
			end
			daily_quest_mgr.update()
		end

		when button or info with pc.is_gm() begin
			say(c_locale(11684)) -- <GM> Reset all daily quests
			say(c_locale(11685)) -- Do you want to reset all daily quests?
			if select(c_locale(11686), c_locale(11687)) == 1 then
				setskin(NOWINDOW)
				daily_quest_mgr.clear()
				set_state("reset")
			end
		end

		when daily_quest_over.timer begin
			daily_quest_mgr.clear()
			set_state("reset")
		end
	end

	state reset begin
		function reset()
			pc.setqf("start_time", get_time())
			pc.setqf("count", 0)

			cleartimer("daily_quest_reset")

			for k, _ in pairs(special.daily_quest.table) do
				local st = select_random_subtable(special.daily_quest.table, k)
				set_quest_state(st["name"], "run")
			end
		end

		when enter with pc.get_level() >= special.daily_quest.level_limit begin
			timer("daily_quest_reset", special.daily_quest.reset_delay)
		end

		when daily_quest_reset.timer begin
			daily_quest_mgr.reset()
			set_state("run")
		end
	end

	state trigger begin
		when enter begin
			cleartimer("daily_quest_reset")
			set_state("run")
		end
	end
end
