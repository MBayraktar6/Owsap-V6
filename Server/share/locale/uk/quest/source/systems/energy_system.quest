quest energy_system begin
	state start begin
		when alchemist.chat.c_locale(963) begin
			say_title(c_mob_name(20001))
			say(c_locale(964))
			wait()
			say_title(c_mob_name(20001))
			say(c_locale(965))
			wait()
			say_title(c_mob_name(20001))
			say(c_locale(966))
			setstate(can_make)
		end
	end

	state can_make begin
		function setting()
			return {
				["prob_acc_table"] = {
					["35to50"] = { 30, 55, 70, 80, 90, 95, 97, 98, 99, 100 },
					["51to70"] = { 20, 40, 60, 75, 85, 91, 96, 98, 99, 100 },
					["upto70"] = { 10, 25, 45, 65, 80, 88, 94, 97, 99, 100 }
				},
				["item_num_table"] = { 0, 1, 2, 3, 4, 6, 8, 10, 12, 15 },
				["energy_stone"] = 51001,
				["charging_stone"] = 51002
			}
		end

		function getItemNum(str, r)
			local setting = energy_system.setting()
			for i = 1, 10 do
				if r < setting.prob_acc_table[str][i] then
					return setting.item_num_table[i]
				end
			end
			return 0
		end

		when alchemist.chat.c_locale(967) begin
			say_title(c_mob_name(20001))
			say(c_locale(968))
			wait()
			say_title(c_mob_name(20001))
			say(c_locale(969))
			wait()
			if pc.get_level() < 35 then
				say_title(c_mob_name(20001))
				say(c_locale(970))
			else
				say_title(c_mob_name(20001))
				say(c_locale(971))
			end
		end

		when alchemist.take begin
			if pc.get_level() < 35 then
				say_title(c_mob_name(20001))
				say(c_locale(972))
				return
			end

			local item_vnum = item.get_vnum()
			local levelLimit = item.get_level_limit(item_vnum)
			local setting = energy_system.setting()

			if levelLimit == nil then
				say_title(c_mob_name(20001))
				say(c_locale(973))
				wait()
			elseif item.get_type() == ITEM_WEAPON and item.get_sub_type() == WEAPON_ARROW then
				say_title(c_mob_name(20001))
				say(c_locale(973))
				wait()
			elseif levelLimit < 35 then
				say_title(c_mob_name(20001))
				say(c_locale(974))
			else
				say_title(c_mob_name(20001))
				say(c_item_name(item_vnum))
				if item.get_attribute_count() > 0 then
					say(c_locale(10822, item.get_attribute_count()))
				end
				say(c_locale(975))
				local s = select(c_locale(976), c_locale(977))
				if s == 1 then
					item.remove()
					local r = number(1, 100)
					local n
					if levelLimit >= 35 and levelLimit <= 50 then
						n = energy_system.getItemNum("35to50", r)
					elseif levelLimit > 50 and levelLimit <= 70 then
						n = energy_system.getItemNum("51to70", r)
					else
						n = energy_system.getItemNum("upto70", r)
					end
					if (n == 0) then
						say_title(c_mob_name(20001))
						say(c_locale(978))
					else
						pc.give_item2(setting.energy_stone, n)
						say_title(c_mob_name(20001))
						say(c_locale(979, n))
					end
				end
			end
		end

		when alchemist.chat.c_locale(980) begin
			local setting = energy_system.setting()
			local need = 30
			say_title(c_mob_name(20001))
			say(c_locale(981, need))
			wait()

			if pc.get_level() < 35 then
				say_title(c_mob_name(20001))
				say(c_locale(970))
				return
			end

			if pc.count_item(setting.energy_stone) < need then
				say_title(c_mob_name(20001))
				say(c_locale(982, need))
				return
			else
				say_title(c_mob_name(20001))
				say(c_locale(983, need))
				wait()
			end

			local charge = 1000
			say_title(c_mob_name(20001))
			say(c_locale(984, charge))
			local s = select(c_locale(985), c_locale(986))
			if s == 2 then
				say_title(c_mob_name(20001))
				say(c_locale(987))
				return
			end

			if pc.get_gold() < charge then
				say_title(c_mob_name(20001))
				say(c_locale(988))
				return
			end

			if pc.count_item(setting.energy_stone) < need then
				return
			end

			pc.change_gold(-charge)
			pc.remove_item(setting.energy_stone, need)

			if pc.getqf("hasExperience") == 0 then
				say_title(c_mob_name(20001))
				say(c_locale(989))
				pc.give_item2(setting.charging_stone, 1)
				pc.setqf("hasExperience", 1)
				return
			end

			local r = number(1, 100)
			if r > 30 then
				say_title(c_mob_name(20001))
				say(c_locale(990))
				return
			end

			say_title(c_mob_name(20001))
			say(c_locale(991))
			pc.give_item2(setting.charging_stone, 1)
		end
	end
end
