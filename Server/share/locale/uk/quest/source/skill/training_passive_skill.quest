quest training_passive_skill begin
	state start begin
		when 50514.use begin
			if training_passive_skill.HasPassiveSkill(2, 1) then
				return
			end

			if pc.get_skill_group() == 0 then
				say_title(c_item_name(50514))
				say(c_locale(7428))
				return
			end

			if not training_passive_skill.HasPassiveSkill(1, 40) then
				say_title(c_item_name(50514))
				say(c_locale(7439))
				return
			end

			local job = pc.get_job()
			local group = pc.get_skill_group()

			local skill_vnum = special.passive_skill_list[3][job][group][1]
			local real_skill_vnum = special.passive_skill_list[3][job][group][2]

			say_title(c_item_name(50514))
			say(c_locale(7441, c_skill_name(real_skill_vnum)))

			if select(c_locale(4473), c_locale(3418)) == 2 then
				return
			end

			if pc.count_item(50514) > 0 then
				say_reward(c_locale(7430, c_skill_name(real_skill_vnum)))
				say_reward(c_locale(7431, c_skill_name(real_skill_vnum)))

				pc.remove_item(50514)
				pc.set_skill_level(skill_vnum, 1)
			else
				char_log(0, "HACK 50514", pc.get_name())
			end
		end

		when 50515.use begin
			if pc.get_skill_group() == 0 then
				say_title(c_item_name(50515))
				say(c_locale(7428))
				return
			end

			if training_passive_skill.HasPassiveSkill(1, 1) then
				say_title(c_item_name(50515))
				say(c_locale(7435))
				return
			end

			local result = training_passive_skill.BuildPassiveSkillList(1)

			local vnum_list = result[1]
			local name_list = result[2]

			say_title(c_item_name(50515))
			say(c_locale(7436))

			local menu_list = {}
			table.foreach(name_list, function(i, name) table.insert(menu_list, name) end)
			table.insert(menu_list, c_locale(2426))

			local s = select_table(menu_list)
			if table.getn(menu_list) == s then
				return
			end

			local skill_vnum = vnum_list[s]
			local skill_name = name_list[s]

			result = training_passive_skill.BuildPassiveSkillList(3)

			local real_skill_vnum = result[1][s]
			local real_skill_name = result[2][s]

			say_title(c_item_name(50515))
			say(c_locale(7432, real_skill_name))
			say(c_locale(7433, skill_name))

			if select(c_locale(4473), c_locale(3418)) == 2 then
				return
			end

			if pc.count_item(50515) > 0 then
				say_reward(c_locale(7437, real_skill_name))
				say_reward(c_locale(7438, real_skill_name))

				pc.remove_item(50515)
				pc.set_skill_level(skill_vnum, 1)
			else
				char_log(0, "HACK 50515", pc.get_name())
			end
		end

		when 50525.use begin
			if pc.get_skill_group() == 0 then
				say_title(c_locale(9913))
				say(c_locale(9924))
				return
			end

			if get_time() < pc.getqf("next_time") then
				if pc.is_skill_book_no_delay() then
					say_title(c_locale(9913))
					say(c_locale(9935))
					wait()
				else
					say_title(c_locale(9913))
					say(c_locale(9936))
					return
				end
			end

			local result = training_passive_skill.BuildGrandMasterPassiveSkillList()

			local vnum_list = result[1]
			local name_list = result[2]

			if table.getn(vnum_list) == 0 then
				say_title(c_locale(9913))
				say(c_locale(9937))
				return
			end

			say_title(c_locale(9913))
			say(c_locale(9938))

			local menu_list = {}
			table.foreach(name_list, function(i, name) table.insert(menu_list, name) end)
			table.insert(menu_list, c_locale(2426))

			local s = select_table(menu_list)
			if table.getn(menu_list) == s then
				return
			end

			local skill_name = name_list[s]
			local skill_vnum = vnum_list[s]
			local skill_level = pc.get_skill_level(skill_vnum)
			local cur_alignment = pc.get_real_alignment()
			local need_alignment = 1000 + 500 * (skill_level - 30)

			if skill_level == 0 then
				say_title(c_locale(9913))
				say(c_locale(7429, skill_name))
				return
			end

			if skill_level > 0 and skill_level < 20 then
				say_title(c_locale(9913))
				say(c_locale(7434))
				return
			end

			if skill_level >= 40 then
				say_title(c_locale(9913))
				say(c_locale(7440))
				return
			end

			local title = c_locale(9941, skill_name)

			say_title(c_locale(9913))
			say(c_locale(9942))

			if cur_alignment < (-19000 + need_alignment) then
				say_reward(c_locale(9914))
				return
			end

			if cur_alignment < 0 then
				say_reward(c_locale(9915, need_alignment, need_alignment * 2))
				say_reward(c_locale(9916))
				need_alignment = need_alignment * 2
			elseif cur_alignment < need_alignment then
				say_reward(c_locale(9917, need_alignment))
				say_reward(c_locale(9918))
			else
				say_reward(c_locale(9917, need_alignment))
			end

			local s = select(c_locale(2669), c_locale(2426))
			if s == 2 then
				return
			end

			if cur_alignment >= 0 and cur_alignment < need_alignment then
				say_title(title)
				say_reward(c_locale(9919))
				say(c_locale(9920))

				if select(c_locale(4473), c_locale(3418)) == 2 then
					return
				end
			end

			if get_time() < pc.getqf("next_time") then
				if pc.is_skill_book_no_delay() then
					pc.remove_skill_book_no_delay()
				else
					say_title(c_locale(9913))
					return
				end
			end

			pc.setqf("next_time", get_time() + time_hour_to_sec(number(8, 12)))

			if need_alignment > 0 then
				if pc.count_item(50525) > 0 then
					if pc.learn_grand_master_skill(skill_vnum) then
						pc.change_alignment(-need_alignment)

						say_title(title)
						say_reward(c_locale(9923))

						if 40 == pc.get_skill_level(skill_vnum) then
							say(c_locale(9925))
							say(c_locale(9926, skill_name))
							say(c_locale(9927))
						else
							say(c_locale(9928))
							say(c_locale(9929, skill_name, (skill_level -30 + 1 + 1)))
						end
						say_reward(c_locale(9930))
						say_reward(c_locale(9931, need_alignment))
					else
						say_title(title)
						say_reward(c_locale(9932))
						say(c_locale(9933))
						say_reward(c_locale(9934))
						pc.change_alignment(-number(need_alignment / 3, need_alignment / 2))
					end
					pc.remove_item(50525)
				else
					char_log(0, "HACK 50525", pc.get_name())
				end
			end
		end

		when 71000.use begin
			if not training_passive_skill.HasPassiveSkill(1, 1) then
				say_title(c_locale(8012))
				say(c_locale(8013))
				return
			end

			say_title(c_locale(8012))
			say(c_locale(8018))
			if select(c_locale(4473), c_locale(3418)) == 2 then
				return
			end

			say_title(c_locale(8012))
			say(c_locale(8020))
			say_reward(c_locale(8019))
			if select(c_locale(4473), c_locale(3418)) == 2 then
				return
			end

			say_title(c_locale(8012))
			say(c_locale(8014))
			wait()

			if pc.count_item(71000) > 0 then
				say_title(c_locale(8012))
				say(c_locale(8021))
				say(c_locale(8022))
				say_reward(c_locale(8023))

				char_log(0, "RESET_PASSIVE_SKILLS", "USE_ITEM(71000)")
				pc.remove_item(71000)
				training_passive_skill.ResetPassiveSkills()
			else
				char_log(0, "HACK 71000", pc.get_name())
			end
		end

		function ResetPassiveSkills()
			local skill_list = special.passive_skill_list
			for group = 1, table.getn(skill_list) - 1 do
				for _, skill_vnum in ipairs(skill_list[group]) do
					pc.clear_one_skill(skill_vnum)
				end
			end
		end

		function HasPassiveSkill(group, level)
			local skill_list = special.passive_skill_list[group]
			for _, skill_vnum in ipairs(skill_list) do
				local skill_level = pc.get_skill_level(skill_vnum)
				if skill_level >= level then
					return true
				end
			end
			--for i = 1, table.getn(skill_list) - 1 do
			--	local skill_vnum = skill_list[i]
			--	local skill_level = pc.get_skill_level(skill_vnum)
			--	if skill_level >= level then
			--		return true
			--	end
			--end
			return false
		end

		function BuildPassiveSkillList(group)
			local skill_list = special.passive_skill_list[group]
			local ret_vnum_list = {}
			local ret_name_list = {}

			table.foreach(skill_list,
				function(i, skill_vnum)
					table.insert(ret_vnum_list, skill_vnum)
					local name = c_skill_name(skill_vnum)
					if name == nil then name = skill_vnum end
					table.insert(ret_name_list, name)
				end
			)

			return { ret_vnum_list, ret_name_list }
		end

		function BuildGrandMasterPassiveSkillList()
			GRAND_MASTER_SKILL_LEVEL = 30
			PERFECT_MASTER_SKILL_LEVEL = 40

			local ret_vnum_list = {}
			local ret_name_list = {}

			for group = 1, 2 do
				local skill_list = special.passive_skill_list[group]
				table.foreach(skill_list,
					function(i, skill_vnum)
						local skill_level = pc.get_skill_level(skill_vnum)

						if skill_level >= GRAND_MASTER_SKILL_LEVEL and skill_level < PERFECT_MASTER_SKILL_LEVEL then
							table.insert(ret_vnum_list, skill_vnum)
							local name = c_skill_name(skill_vnum)
							if name == nil then name = skill_vnum end
							table.insert(ret_name_list, name)
						end
					end
				)
			end

			return { ret_vnum_list, ret_name_list }
		end
	end
end
